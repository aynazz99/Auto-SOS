// ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase =====
const firebaseConfig = {
  apiKey: "AIzaSyDtpFytzqGoE8w1cK_uekt3nnNGN4vV2Y8",
  authDomain: "auto-sos-8446f.firebaseapp.com",
  projectId: "auto-sos-8446f",
  storageBucket: "auto-sos-8446f.firebasestorage.app",
  messagingSenderId: "326847407685",
  appId: "1:326847407685:web:bfc1434124e1feed3ce52c",
  measurementId: "G-0YL7B1NZT1"
};

firebase.initializeApp(firebaseConfig);
const db = firebase.database();

// ===== –î–µ–±–∞–≥ –ø—Ä—è–º–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ =====
document.addEventListener("DOMContentLoaded", async () => {
  // ===== –°–æ–∑–¥–∞–µ–º –¥–µ–±–∞–≥-—ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç =====
  let debugDiv = document.getElementById("debug");
  if (!debugDiv) {
    debugDiv = document.createElement("div");
    debugDiv.id = "debug";
    debugDiv.style.cssText = "position:fixed;bottom:0;left:0;width:100%;max-height:150px;overflow:auto;background:#000;color:#0f0;font-size:12px;padding:5px;z-index:9999;";
    document.body.appendChild(debugDiv);
  }

  function debugLog(msg) {
    const time = new Date().toLocaleTimeString();
    debugDiv.innerHTML += `[${time}] ${msg}<br>`;
    debugDiv.scrollTop = debugDiv.scrollHeight;
  }

  debugLog("‚úÖ DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω");

  // ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase =====
  const firebaseConfig = {
    apiKey: "AIzaSyDtpFytzqGoE8w1cK_uekt3nnNGN4vV2Y8",
    authDomain: "auto-sos-8446f.firebaseapp.com",
    projectId: "auto-sos-8446f",
    storageBucket: "auto-sos-8446f.firebasestorage.app",
    messagingSenderId: "326847407685",
    appId: "1:326847407685:web:bfc1434124e1feed3ce52c",
    measurementId: "G-0YL7B1NZT1"
  };

  firebase.initializeApp(firebaseConfig);
  const db = firebase.database();
  debugLog("‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");

  // ===== –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ Telegram =====
  const tgUser = Telegram?.WebApp?.initDataUnsafe?.user;
  if (!tgUser) {
    debugLog("‚ùå Telegram WebApp –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!");
    alert("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!");
    return;
  }

  const tgId = tgUser.id;
  const tgName = tgUser.first_name;
  const tgUsername = tgUser.username;
  debugLog(`‚úÖ Telegram: ID=${tgId}, Name=${tgName}, Username=${tgUsername}`);

  // ===== –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –∏ –ø–æ–ø–∞–ø =====
  const regPopup = document.getElementById("regPopup");
  const regForm = document.getElementById("regForm");
  if (!regPopup || !regForm) {
    debugLog("‚ùå –ü–æ–ø–∞–ø –∏–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
    return;
  }

  // ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ =====
  try {
    const snapshot = await db.ref('users/' + tgId).get();
    if (snapshot.exists()) {
      debugLog("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: " + JSON.stringify(snapshot.val()));
      initApp(snapshot.val());
    } else {
      debugLog("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø");
      regPopup.classList.add('show');
    }
  } catch (err) {
    debugLog("‚ùå –û—à–∏–±–∫–∞ Firebase: " + err);
  }

  // ===== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ =====
  regForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(regForm);
    const data = {
      person: formData.get("person"),
      car: formData.get("car"),
      carPlate: formData.get("carPlate"),
      phone: formData.get("phone")
    };

    try {
      await db.ref('users/' + tgId).set(data);
      debugLog("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: " + JSON.stringify(data));
      regPopup.classList.remove('show');
      initApp(data);
    } catch (err) {
      debugLog("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + err);
    }
  });

  // ===== –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è =====
  function initApp(userData) {
    debugLog(`üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userData.person}`);
    window.location.href = "../page1/page1.html";
  }
});




const carPlateInput = document.querySelector('.car-plate');

const cyrillicToLatin = {
  '–ê': 'A', '–í': 'B', '–°': 'C', '–ï': 'E',
  '–ö': 'K', '–ú': 'M', '–ù': 'H', '–û': 'O',
  '–†': 'P', '–¢': 'T', '–•': 'X'
};

carPlateInput.addEventListener('input', (e) => {
  let value = e.target.value.toUpperCase();

  // –ó–∞–º–µ–Ω—è–µ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—É –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü—É
  value = value.replace(/[–ê–í–°–ï–ö–ú–ù–û–†–¢–•]/g, match => cyrillicToLatin[match]);

  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü—É –∏ —Ü–∏—Ñ—Ä—ã)
  value = value.replace(/[^A-Z0-9]/g, '');

  let formatted = '';

  for (let i = 0; i < value.length; i++) {
    if (i === 0) {
      if (/[A-Z]/.test(value[i])) formatted += value[i];        // –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞
    } else if (i >= 1 && i <= 3) {
      if (/[0-9]/.test(value[i])) formatted += value[i];        // 3 —Ü–∏—Ñ—Ä—ã
    } else if (i >= 4 && i <= 5) {
      if (/[A-Z]/.test(value[i])) formatted += value[i];        // 2 –±—É–∫–≤—ã
    } else if (i >= 6 && i <= 8) {
      if (/[0-9]/.test(value[i])) formatted += value[i];        // 2-3 —Ü–∏—Ñ—Ä—ã (—Ä–µ–≥–∏–æ–Ω)
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
  let spaced = '';
  if (formatted.length > 0) spaced += formatted[0];                 // –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞
  if (formatted.length > 1) spaced += ' ' + formatted.substr(1, 3); // —Ç—Ä–∏ —Ü–∏—Ñ—Ä—ã
  if (formatted.length > 4) spaced += ' ' + formatted.substr(4, 2); // –¥–≤–µ –±—É–∫–≤—ã
  if (formatted.length > 6) spaced += ' | ' + formatted.substr(6, 3); // —Ä–µ–≥–∏–æ–Ω —á–µ—Ä–µ–∑ |

  e.target.value = spaced.trim();
});


const nameInput = document.querySelector('.person-name');

nameInput.addEventListener('input', (e) => {
    let value = e.target.value;

    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã
    value = value.replace(/[^A-Za-z–ê-–Ø–∞-—è–Å—ë\s-]/g, '');

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–æ 25 —Å–∏–º–≤–æ–ª–æ–≤
    value = value.substring(0, 25);

    // –î–µ–ª–∞–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–æ–π
    value = value.split(/[\s-]+/).map(word => {
        if (word.length === 0) return '';
        return word[0].toUpperCase() + word.slice(1);
    }).join(' ');

    e.target.value = value;
});


const phoneInput = document.querySelector('.phone');

phoneInput.addEventListener('input', (e) => {
    let digits = e.target.value.replace(/\D/g, ''); // –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã

    // –ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ —Ü–∏—Ñ—Ä—ã –∫ 8
    if (/^[0-9]/.test(digits)) {
        digits = '8' + digits.substr(1);
    }


    digits = digits.substring(0, 11); // –º–∞–∫—Å–∏–º—É–º 11 —Ü–∏—Ñ—Ä

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    let formatted = '';
    for (let i = 0; i < digits.length; i++) {
        if (i === 0) formatted += digits[i];
        else if (i === 1) formatted += ' (' + digits[i];
        else if (i === 2 || i === 3) formatted += digits[i];
        else if (i === 4) formatted += ') ' + digits[i];
        else if (i === 5 || i === 6) formatted += digits[i];
        else if (i === 7) formatted += ' ' + digits[i];
        else if (i === 8) formatted += digits[i];
        else if (i === 9) formatted += ' ' + digits[i];
        else if (i === 10) formatted += digits[i];
    }

    e.target.value = formatted;
});

const carInput = document.querySelector('.car');

carInput.addEventListener('input', (e) => {
  let value = e.target.value.toUpperCase();

  // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã (–ª—é–±–∞—è –∫–∏—Ä–∏–ª–ª–∏—Ü–∞ –∏ –ª–∞—Ç–∏–Ω–∏—Ü–∞)
  value = value.replace(/[^A-Z–ê-–Ø0-9]/gi, '');

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–æ 25 —Å–∏–º–≤–æ–ª–æ–≤
  value = value.substring(0, 25);

  e.target.value = value;
});




